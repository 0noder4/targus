services:
  postgres:
    image: postgres
    container_name: ${PROJECT_NAME}_postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - internal

  backend:
    image: 0noder4/targus:backend_1.1
    container_name: ${PROJECT_NAME}_backend
    build:
      context: backend
      args:
        NODE_ENV: ${NODE_ENV}
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./backend/config:/opt/app/config
      - ./backend/src:/opt/app/src
      - ./backend/package.json:/opt/package.json
      - ./backend/public/:/opt/app/public/
    ports:
      - "1337:1337"
    networks:
      - internal

  frontend:
    image: 0noder4/targus:frontend_alfa_4.0
    container_name: ${PROJECT_NAME}_frontend
    restart: on-failure
    build:
      context: frontend
      target: ${NODE_ENV}
      args:
        NODE_ENV: ${NODE_ENV}
        NEXT_PUBLIC_BACKEND_PROTOCOL: ${NEXT_PUBLIC_BACKEND_PROTOCOL}
        NEXT_PUBLIC_BACKEND_HOST: ${NEXT_PUBLIC_BACKEND_HOST}
        NEXT_PUBLIC_BACKEND_PORT: ${NEXT_PUBLIC_BACKEND_PORT}
        BACKEND_API_TOKEN: ${BACKEND_API_TOKEN}
    environment:
      NODE_ENV: ${NODE_ENV}
      MJ_APIKEY_PUBLIC: ${MJ_APIKEY_PUBLIC}
      MJ_APIKEY_PRIVATE: ${MJ_APIKEY_PRIVATE}
      BACKEND_API_TOKEN: ${BACKEND_API_TOKEN}
      NEXT_PUBLIC_BACKEND_PROTOCOL: ${NEXT_PUBLIC_BACKEND_PROTOCOL}
      NEXT_PUBLIC_BACKEND_HOST: ${NEXT_PUBLIC_BACKEND_HOST}
      NEXT_PUBLIC_BACKEND_PORT: ${NEXT_PUBLIC_BACKEND_PORT}
    ports:
      - 3080:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - internal

volumes:
  data:
networks:
  internal:
